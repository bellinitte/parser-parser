let e,n=new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0});n.decode();let t=null;function r(){return null!==t&&t.buffer===e.memory.buffer||(t=new Uint8Array(e.memory.buffer)),t}function o(e,t){return n.decode(r().subarray(e,e+t))}const i=new Array(32).fill(void 0);i.push(void 0,null,!0,!1);let c=i.length;function a(e){c===i.length&&i.push(i.length+1);const n=c;return c=i[n],i[n]=e,n}function s(e){return i[e]}function u(e){const n=s(e);return function(e){e<36||(i[e]=c,c=e)}(e),n}let f=0,l=new TextEncoder("utf-8");const _="function"==typeof l.encodeInto?function(e,n){return l.encodeInto(e,n)}:function(e,n){const t=l.encode(e);return n.set(t),{read:e.length,written:t.length}};function b(e,n,t){if(void 0===t){const t=l.encode(e),o=n(t.length);return r().subarray(o,o+t.length).set(t),f=t.length,o}let o=e.length,i=n(o);const c=r();let a=0;for(;a<o;a++){const n=e.charCodeAt(a);if(n>127)break;c[i+a]=n}if(a!==o){0!==a&&(e=e.slice(a)),i=t(i,o,o=a+3*e.length);const n=r().subarray(i+a,i+o);a+=_(e,n).written}return f=a,i}let w=null;function g(){return null!==w&&w.buffer===e.memory.buffer||(w=new Int32Array(e.memory.buffer)),w}class p{static __wrap(e){const n=Object.create(p.prototype);return n.ptr=e,n}free(){const n=this.ptr;this.ptr=0,e.__wbg_ebnfparserparser_free(n)}constructor(n){var t=b(n,e.__wbindgen_malloc,e.__wbindgen_realloc),r=f,o=e.ebnfparserparser_new(t,r);return p.__wrap(o)}get productionRules(){return u(e.ebnfparserparser_get_production_rules(this.ptr))}check(n,t){var r=b(n,e.__wbindgen_malloc,e.__wbindgen_realloc),o=f,i=b(t,e.__wbindgen_malloc,e.__wbindgen_realloc),c=f;return 0!==e.ebnfparserparser_check(this.ptr,r,o,i,c)}}async function d(n){void 0===n&&(n=import.meta.url.replace(/\.js$/,"_bg.wasm"));const t={};var r;t.wbg={},t.wbg.__wbg_new_8172f4fed77fdb7c=function(){return a(new Object)},t.wbg.__wbindgen_string_new=function(e,n){return a(o(e,n))},t.wbg.__wbindgen_number_new=function(e){return a(e)},t.wbg.__wbg_set_afe54b1eeb1aa77c=(r=function(e,n,t){return Reflect.set(s(e),s(n),s(t))},function(){try{return r.apply(this,arguments)}catch(n){e.__wbindgen_exn_store(a(n))}}),t.wbg.__wbindgen_object_drop_ref=function(e){u(e)},t.wbg.__wbg_new_17534eac4df3cd22=function(){return a(new Array)},t.wbg.__wbg_push_7114ccbf1c58e41f=function(e,n){return s(e).push(s(n))},t.wbg.__wbindgen_debug_string=function(n,t){var r=b(function e(n){const t=typeof n;if("number"==t||"boolean"==t||null==n)return""+n;if("string"==t)return`"${n}"`;if("symbol"==t){const e=n.description;return null==e?"Symbol":`Symbol(${e})`}if("function"==t){const e=n.name;return"string"==typeof e&&e.length>0?`Function(${e})`:"Function"}if(Array.isArray(n)){const t=n.length;let r="[";t>0&&(r+=e(n[0]));for(let o=1;o<t;o++)r+=", "+e(n[o]);return r+="]",r}const r=/\[object ([^\]]+)\]/.exec(toString.call(n));let o;if(!(r.length>1))return toString.call(n);if(o=r[1],"Object"==o)try{return"Object("+JSON.stringify(n)+")"}catch(e){return"Object"}return n instanceof Error?`${n.name}: ${n.message}\n${n.stack}`:o}(s(t)),e.__wbindgen_malloc,e.__wbindgen_realloc),o=f;g()[n/4+1]=o,g()[n/4+0]=r},t.wbg.__wbindgen_throw=function(e,n){throw new Error(o(e,n))},t.wbg.__wbindgen_rethrow=function(e){throw u(e)},("string"==typeof n||"function"==typeof Request&&n instanceof Request||"function"==typeof URL&&n instanceof URL)&&(n=fetch(n));const{instance:i,module:c}=await async function(e,n){if("function"==typeof Response&&e instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,n)}catch(n){if("application/wasm"==e.headers.get("Content-Type"))throw n;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",n)}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}(await n,t);return e=i.exports,d.__wbindgen_wasm_module=c,e}var y=Object.freeze({__proto__:null,EbnfParserParser:p,default:d});export default async()=>(await d("parser-parser-core.wasm"),y);
